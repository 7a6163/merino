# name: Publish Releases to GitHub

# on:
#   push:
#     # Publish `master` as Docker `latest` image.
#     branches:
#       - main

#     # Publish `v1.2.3` tags as releases.
#     tags:
#       - '*'

# env:
#   IMAGE_NAME: drone

# jobs:
#   # Push image to GitHub Packages.
#   # See also https://docs.docker.com/docker-hub/builds/
#   push:
#     runs-on: ubuntu-latest
#     permissions:
#       packages: write
#       contents: read

#     steps:
#       - uses: actions/checkout@v2

#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v1

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Login to GitHub Package Registry
#         run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

#       - name: Build & Push Docker image
#         run: docker buildx build -t ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:${GITHUB_SHA} --push --platform=linux/arm64,linux/amd64 .

#       - name: Push image
#         run: |
#           IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

#           # Change all uppercase to lowercase
#           IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
#           # Strip git ref prefix from version
#           VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
#           # Strip "v" prefix from tag name
#           [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#           # Use Docker `latest` tag convention
#           [ "$VERSION" == "main" ] && VERSION=latest
#           echo IMAGE_ID=$IMAGE_ID
#           echo VERSION=$VERSION
#           # docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
#           docker push $IMAGE_ID:$VERSION